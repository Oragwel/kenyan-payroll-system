<?php
/**
 * Database Configuration - Auto-generated by robust installer
 * This file is created by the robust database installer
 */

require_once __DIR__ . '/DatabaseManager.php';

// Check if we have a saved configuration
$configFile = __DIR__ . '/database_config.php';

if (file_exists($configFile)) {
    // Use saved configuration
    $config = include $configFile;
    $database = new DatabaseManager($config);
} else {
    // Fallback to SQLite for development
    $database = new DatabaseManager([
        'type' => 'sqlite',
        'path' => __DIR__ . '/../database/kenyan_payroll.sqlite'
    ]);
}

// Get the database connection
$db = $database->getConnection();

// Legacy compatibility - some old code might expect this

class Database {
    private $host = 'localhost';
    private $db_name = 'kenyan_payroll';
    private $username = 'payroll_user';
    private $password = 'Mania124#';
    private $port = '3306';
    private $conn;

    public function getConnection() {
        $this->conn = null;
        try {
            $this->conn = new PDO(
                "mysql:host=" . $this->host . ";port=" . $this->port . ";dbname=" . $this->db_name . ";charset=utf8mb4",
                $this->username,
                $this->password,
                [
                    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
                    PDO::ATTR_EMULATE_PREPARES => false
                ]
            );
        } catch(PDOException $exception) {
            echo "Connection error: " . $exception->getMessage();
        }
        return $this->conn;
    }
}
?>